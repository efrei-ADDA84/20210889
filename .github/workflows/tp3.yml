name: Docker Image TP3  # Le nom du workflow

on:
  # Le workflow sera declenche lorsqu'un push est effectue sur la branche "main"
  push:  
    branches: [ "main" ]

jobs:

  build:

    # Specifie l'image Docker à utiliser pour l'environnement d'execution des actions
    runs-on: ubuntu-latest
    
    # Les étapes du workflow
    steps:

        # Se connecter a Docker Hub en utilisant les informations d'identification stockees dans les secrets GitHub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          # Le nom d'utilisateur et mot de passe Docker Hub sont stockes dans les secrets GitHub
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          
        # Recupere le code source du dépôt GitHub
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: efreidevopskh.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
        
        # Verifie la conformite du Dockerfile a l'aide de Hadolint
      - name: Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          # Specifie le chemin d'acces au Dockerfile
          dockerfile: ./TP3/Dockerfile
        
        # Configure Docker Buildx pour la construction d'images
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Build and push image
        id: build-image
        run: |
         az acr build --image ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:${{ github.sha }} --registry ${{ secrets.REGISTRY_LOGIN_SERVER }} --file "Dockerfile" .

      - name: 'Deploy to Azure Container Instances'
        uses: 'azure/aci-deploy@v1'
        with:
         resource-group: ${{ secrets.RESOURCE_GROUP }}
         dns-name-label: ${{ secrets.RESOURCE_GROUP }}${{ github.run_number }}
         image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:${{ github.sha }}
         registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
         registry-username: ${{ secrets.REGISTRY_USERNAME }}
         registry-password: ${{ secrets.REGISTRY_PASSWORD }}
         name: 20210889
         location: 'germany west central'
